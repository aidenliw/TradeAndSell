@using TradeAndSell.Data
@model TradeAndSell.Models.Item

@{
    ViewData["Title"] = "Details";
    string MyItem = ViewData["MyItem"] as string;
    ApplicationUser SellerInfo = ViewData["SellerInfo"] as ApplicationUser;
}

<h1>Details</h1>

<div>
    <h4>Item</h4>
    <hr />
    <div class="row justify-content-center">
        <div class="">
            <div class="row">
                <div class="col-5">
                    @if (Model.ImagePath != null)
                    {
                        <img src="~/images/@Model.ImagePath" class="card-img" alt="Item Image">
                    }
                    else
                    {
                        <img src="~/images/no-image-avaiable.jpg" class="card-img" alt="No Image">
                    }
                </div>
                <div class="col-7">
                    <div class="row">
                        <div class="col-6">
                            <h2>@Html.DisplayFor(model => model.Title)</h2>
                        </div>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <div class="col-6">
                                <h4>Seller: <a asp-controller="Account" asp-action="Details" asp-route-id="@SellerInfo.Id">@SellerInfo.DisplayName</a></h4>
                            </div>
                        }

                    </div>
                    <br />
                    <h4>@Html.DisplayFor(model => model.Condition)</h4>
                    <br />
                    <h4>Quantity Left: @Html.DisplayFor(model => model.Quantity)</h4>
                    <h4>
                        Buy Out Price: CA$ @Html.DisplayFor(model => model.Price)
                    </h4>
                    @if (Model.AllowTrade == "true")
                    {
                        <h4>Trade Range: CA$ @Html.DisplayFor(model => model.MinTradePrice) ~ CA$ @Html.DisplayFor(model => model.MaxTradePrice)</h4>
                    }
                    else
                    {
                        <p class="card-text">Trade Not Allowed</p>
                    }
                    <br />
                    <input type="hidden" asp-for="Id" />
                    @if (MyItem == "false")
                    {
                        <div>
                            <input type="button" class="btn btn-primary" id="checkout-button" value="Buy" />
                            <script src="https://js.stripe.com/v3/"></script>
                            <script type="text/javascript">
                                // Create an instance of the Stripe object with your publishable API key
                                var stripe = Stripe('pk_test_qfqpYTsq4Wxr7Su4VweI1pGi00kCTVhkb0');
                                var checkoutButton = document.getElementById('checkout-button');
                                checkoutButton.addEventListener('click', function () {
                                    // Create a new Checkout Session using the server-side endpoint you
                                    // created in step 3.
                                    fetch('/create-checkout-session', {
                                        method: 'POST',
                                    })
                                        .then(function (response) {
                                            return response.json();
                                        })
                                        .then(function (session) {
                                            return stripe.redirectToCheckout({ sessionId: session.id });
                                        })
                                        .then(function (result) {
                                            // If `redirectToCheckout` fails due to a browser or network
                                            // error, you should display the localized error message to your
                                            // customer using `error.message`.
                                            if (result.error) {
                                                alert(result.error.message);
                                            }
                                        })
                                        .catch(function (error) {
                                            console.error('Error:', error);
                                        });
                                });
                            </script>
                            @if (Model.AllowTrade == "true")
                            {
                                <a class="btn btn-success" asp-action="Trade" asp-route-id="@Model.Id">Trade</a>
                            }
                            @if (User.Identity.IsAuthenticated && (User.IsInRole("Member") || User.IsInRole("Admin")))
                            {
                                <a class="btn btn-outline-primary" asp-action="AddToCart" asp-route-id="@Model.Id">Add to Cart</a>
                                <a class="btn btn-outline-success" asp-action="AddToWishList" asp-route-id="@Model.Id">Add to Wish List</a>
                            }
                        </div>
                    }
                    else 
                    {
                        <div class="alert alert-info" role="alert">
                            This is your item.
                        </div>
                    }

                </div>
                <div class="col-12">
                    <h5>Description:</h5>
                    <p>@Html.DisplayFor(model => model.Description)</p>
                    <h5>Seller Location:</h5>
                    <p>@Html.DisplayFor(model => model.City)</p>
                </div>
            </div>
            <div>
                <a asp-action="Index">Back to List</a>
            </div>
        </div>
    </div>
</div>
@*<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
</div>*@
